{"version":3,"sources":["ng://ng-material-multilevel-menu/lib/materials.module.ts","ng://ng-material-multilevel-menu/lib/constants.ts","ng://ng-material-multilevel-menu/lib/multilevel-menu.service.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.component.ts","ng://ng-material-multilevel-menu/lib/list-item/list-item.component.ts","ng://ng-material-multilevel-menu/lib/ng-material-multilevel-menu.module.ts"],"names":["MaterialsModule","NgModule","args","imports","MatIconModule","MatListModule","MatRippleModule","declarations","exports","CONSTANT","PADDING_AT_START","DEFAULT_CLASS_NAME","DEFAULT_LIST_CLASS_NAME","SELECTED_LIST_CLASS_NAME","ACTIVE_ITEM_CLASS_NAME","DISABLED_ITEM_CLASS_NAME","DEFAULT_SELECTED_FONT_COLOR","DEFAULT_LIST_BACKGROUND_COLOR","DEFAULT_LIST_FONT_COLOR","ERROR_MESSAGE","MultilevelMenuService","prototype","generateId","text","possible","i","charAt","Math","floor","random","length","addRandomId","nodes","_this","this","forEach","node","id","items","undefined","recursiveCheckId","nodeId","some","nestedNode","recursiveCheckLink","link","nodeIndex","key","hasOwnProperty","encodeURI","foundLinkObject","getMatchedObjectByUrl","kvDummyComparerFn","Injectable","providedIn","NgMaterialMultilevelMenuComponent","router","multilevelMenuService","configuration","selectedItem","EventEmitter","selectedLabel","nodeConfig","paddingAtStart","listBackgroundColor","fontColor","selectedListFontColor","interfaceWithRoute","collapseOnSelect","highlightOnSelect","rtlLayout","dividerLineOnEachNodeByDefault","isInvalidConfig","ngOnChanges","detectInvalidConfig","ngOnInit","events","subscribe","event","NavigationEnd","updateNodeByURL","url","foundNode","currentNode","selectedListItem","checkValidData","console","warn","filter","n","hidden","config","getClassName","classname","getGlobalStyle","styles","background","backgroundColor","isRtlLayout","onSelected","emit","Component","selector","template","Router","Input","Output","ListItemComponent","level","submenuLevel","nodeConfiguration","isSelected","expanded","firstInitializer","selectedListClasses","_a","nodeChildren","selectedNode","setSelectedClass","disabled","faIcon","match","setClasses","isFound","getPaddingAtStart","getListStyle","color","getListIcon","icon","imageIcon","svgIcon","getSelectedSvgIcon","activeSvgIcon","getSelectedIcon","activeIcon","getSelectedFaIcon","activeFaIcon","getSelectedImageIcon","activeImageIcon","hasItems","classes","expand","externalRedirect","window","location","href","navigate","navigationExtras","dividerEnabled","dividerLine","animations","trigger","state","style","height","opacity","transition","group","animate","transform","NgMaterialMultilevelMenuModule","CommonModule"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRippleModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }\r\n","export const CONSTANT = {\r\n    PADDING_AT_START: true,\r\n    DEFAULT_CLASS_NAME: `amml-container`,\r\n    DEFAULT_LIST_CLASS_NAME: `amml-item`,\r\n    SELECTED_LIST_CLASS_NAME: `selected-amml-item`,\r\n    ACTIVE_ITEM_CLASS_NAME: `active-amml-item`,\r\n    DISABLED_ITEM_CLASS_NAME: `disabled-amml-item`,\r\n    DEFAULT_SELECTED_FONT_COLOR: `#1976d2`,\r\n    DEFAULT_LIST_BACKGROUND_COLOR: `transparent`,\r\n    DEFAULT_LIST_FONT_COLOR: `rgba(0,0,0,.87)`,\r\n    ERROR_MESSAGE: `Invalid data for material Multilevel List Component`\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { MultilevelNodes } from './app.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MultilevelMenuService {\r\n  foundLinkObject: MultilevelNodes;\r\n  generateId(): string {\r\n    let text = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (let i = 0; i < 20; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n  addRandomId(nodes: MultilevelNodes[]): void {\r\n    nodes.forEach((node: MultilevelNodes) => {\r\n      node.id = this.generateId();\r\n      if (node.items !== undefined) {\r\n        this.addRandomId(node.items);\r\n      }\r\n    });\r\n  }\r\n  recursiveCheckId(node: MultilevelNodes, nodeId: string): boolean {\r\n    if (node.id === nodeId) {\r\n      return true;\r\n    } else {\r\n      if (node.items !== undefined) {\r\n        return node.items.some((nestedNode: MultilevelNodes) => {\r\n          return this.recursiveCheckId(nestedNode, nodeId);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  recursiveCheckLink(nodes: MultilevelNodes[], link: string): void {\r\n    for (let nodeIndex = 0; nodeIndex < nodes.length; nodeIndex++) {\r\n      const node = nodes[nodeIndex];\r\n      for (const key in node) {\r\n        if (node.hasOwnProperty(key)) {\r\n          if (encodeURI(node.link) === link) {\r\n            this.foundLinkObject = node;\r\n          } else {\r\n            if (node.items !== undefined) {\r\n              this.recursiveCheckLink(node.items, link);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getMatchedObjectByUrl(node: MultilevelNodes[], link: string): MultilevelNodes {\r\n    this.recursiveCheckLink(node, link);\r\n    return this.foundLinkObject;\r\n  }\r\n  // overrides key-value pipe's default reordering (by key) by implementing dummy comprarer function\r\n  // https://angular.io/api/common/KeyValuePipe#description\r\n  kvDummyComparerFn() {\r\n    return 0;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { BackgroundStyle, Configuration, MultilevelNodes } from './app.model';\r\nimport { CONSTANT } from './constants';\r\nimport { MultilevelMenuService } from './multilevel-menu.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ng-material-multilevel-menu',\r\n  templateUrl: './ng-material-multilevel-menu.component.html',\r\n  styleUrls: ['./ng-material-multilevel-menu.component.css'],\r\n})\r\nexport class NgMaterialMultilevelMenuComponent implements OnInit, OnChanges {\r\n  @Input() items: MultilevelNodes[];\r\n  @Input() configuration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  @Output() selectedLabel = new EventEmitter<MultilevelNodes>();\r\n  currentNode: MultilevelNodes;\r\n  nodeConfig: Configuration = {\r\n    paddingAtStart: true,\r\n    listBackgroundColor: null,\r\n    fontColor: null,\r\n    selectedListFontColor: null,\r\n    interfaceWithRoute: null,\r\n    collapseOnSelect: null,\r\n    highlightOnSelect: false,\r\n    rtlLayout: false,\r\n    dividerLineOnEachNodeByDefault: false\r\n  };\r\n  isInvalidConfig = true;\r\n  constructor(\r\n    private router: Router,\r\n    public multilevelMenuService: MultilevelMenuService\r\n  ) { }\r\n  ngOnChanges() {\r\n    this.detectInvalidConfig();\r\n  }\r\n  ngOnInit() {\r\n    if (\r\n      this.configuration !== null && this.configuration !== undefined && this.configuration !== '' &&\r\n      this.configuration.interfaceWithRoute !== null && this.configuration.interfaceWithRoute) {\r\n      this.router.events\r\n        .subscribe((event) => {\r\n          if (event instanceof NavigationEnd) {\r\n            this.updateNodeByURL(event.url);\r\n          }\r\n        });\r\n      this.updateNodeByURL(this.router.url);\r\n    }\r\n  }\r\n  updateNodeByURL(url: string): void {\r\n    const foundNode = this.multilevelMenuService.getMatchedObjectByUrl(this.items, url);\r\n    if (\r\n      foundNode !== undefined &&\r\n      foundNode.link !== undefined &&\r\n      foundNode.link !== null &&\r\n      foundNode.link !== ''\r\n      // && !foundNode.disabled // Prevent route redirection for disabled menu\r\n    ) {\r\n      this.currentNode = foundNode;\r\n      this.selectedListItem(foundNode);\r\n    }\r\n  }\r\n  checkValidData(): void {\r\n    if (this.items.length === 0) {\r\n      console.warn(CONSTANT.ERROR_MESSAGE);\r\n    } else {\r\n      this.items = this.items.filter(n => !n.hidden);\r\n      this.multilevelMenuService.addRandomId(this.items);\r\n    }\r\n  }\r\n  detectInvalidConfig(): void {\r\n    if (this.configuration === null || this.configuration === undefined || this.configuration === '') {\r\n      this.isInvalidConfig = true;\r\n    } else {\r\n      this.isInvalidConfig = false;\r\n      const config = this.configuration;\r\n      if (config.paddingAtStart !== undefined && config.paddingAtStart !== null && typeof config.paddingAtStart === 'boolean') {\r\n        this.nodeConfig.paddingAtStart = config.paddingAtStart;\r\n      }\r\n      if (config.listBackgroundColor !== '' &&\r\n        config.listBackgroundColor !== null &&\r\n        config.listBackgroundColor !== undefined) {\r\n        this.nodeConfig.listBackgroundColor = config.listBackgroundColor;\r\n      }\r\n      if (config.fontColor !== '' &&\r\n        config.fontColor !== null &&\r\n        config.fontColor !== undefined) {\r\n        this.nodeConfig.fontColor = config.fontColor;\r\n      }\r\n      if (config.selectedListFontColor !== '' &&\r\n        config.selectedListFontColor !== null &&\r\n        config.selectedListFontColor !== undefined) {\r\n        this.nodeConfig.selectedListFontColor = config.selectedListFontColor;\r\n      }\r\n      if (config.interfaceWithRoute !== null &&\r\n        config.interfaceWithRoute !== undefined &&\r\n        typeof config.interfaceWithRoute === 'boolean') {\r\n        this.nodeConfig.interfaceWithRoute = config.interfaceWithRoute;\r\n      }\r\n      if (config.collapseOnSelect !== null &&\r\n        config.collapseOnSelect !== undefined &&\r\n        typeof config.collapseOnSelect === 'boolean') {\r\n        this.nodeConfig.collapseOnSelect = config.collapseOnSelect;\r\n      }\r\n      if (config.highlightOnSelect !== null &&\r\n        config.highlightOnSelect !== undefined &&\r\n        typeof config.highlightOnSelect === 'boolean') {\r\n        this.nodeConfig.highlightOnSelect = config.highlightOnSelect;\r\n      }\r\n      if (config.rtlLayout !== null &&\r\n        config.rtlLayout !== undefined &&\r\n        typeof config.rtlLayout === 'boolean') {\r\n        this.nodeConfig.rtlLayout = config.rtlLayout;\r\n      }\r\n      if (config.dividerLineOnEachNodeByDefault !== null &&\r\n        config.dividerLineOnEachNodeByDefault !== undefined &&\r\n        typeof config.dividerLineOnEachNodeByDefault === 'boolean') {\r\n        this.nodeConfig.dividerLineOnEachNodeByDefault = config.dividerLineOnEachNodeByDefault;\r\n      }\r\n      this.checkValidData();\r\n    }\r\n  }\r\n  getClassName(): string {\r\n    if (this.isInvalidConfig) {\r\n      return CONSTANT.DEFAULT_CLASS_NAME;\r\n    } else {\r\n      if (this.configuration.classname !== '' && this.configuration.classname !== null && this.configuration.classname !== undefined) {\r\n        return `${CONSTANT.DEFAULT_CLASS_NAME} ${this.configuration.classname}`;\r\n      } else {\r\n        return CONSTANT.DEFAULT_CLASS_NAME;\r\n      }\r\n    }\r\n  }\r\n  getGlobalStyle(): BackgroundStyle {\r\n    if (!this.isInvalidConfig) {\r\n      const styles = {\r\n        background : null\r\n      };\r\n      if (this.configuration.backgroundColor !== '' &&\r\n        this.configuration.backgroundColor !== null &&\r\n        this.configuration.backgroundColor !== undefined) {\r\n        styles.background = this.configuration.backgroundColor;\r\n      }\r\n      return styles;\r\n    }\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfig.rtlLayout;\r\n  }\r\n  selectedListItem(event: MultilevelNodes): void {\r\n    this.currentNode = event;\r\n    if (event.items === undefined && (!event.onSelected || typeof event.onSelected !== 'function') ) {\r\n      this.selectedItem.emit(event);\r\n    } else {\r\n      this.selectedLabel.emit(event);\r\n    }\r\n  }\r\n}\r\n","import { animate, group, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Configuration, ListStyle, MultilevelNodes } from './../app.model';\r\nimport { CONSTANT } from './../constants';\r\nimport { MultilevelMenuService } from './../multilevel-menu.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ng-list-item',\r\n  templateUrl: './list-item.component.html',\r\n  styleUrls: ['./list-item.component.css'],\r\n  animations: [\r\n    trigger('slideInOut', [\r\n      state('in', style({ height: '*', opacity: 0 })),\r\n      transition(':leave', [\r\n        style({ height: '*', opacity: 0.2 }),\r\n        group([\r\n          animate(200, style({ height: 0 })),\r\n          animate('200ms ease-out', style({ opacity: 0 }))\r\n        ])\r\n      ]),\r\n      transition(':enter', [\r\n        style({ height: '0', opacity: 0 }),\r\n        group([\r\n          animate(200, style({ height: '*' })),\r\n          animate('400ms ease-out', style({ opacity: 1 }))\r\n        ])\r\n      ])\r\n    ]),\r\n    trigger('isExpandedLTR', [\r\n      state('no', style({ transform: 'rotate(-90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ]),\r\n    trigger('isExpandedRTL', [\r\n      state('no', style({ transform: 'rotate(90deg)' })),\r\n      state('yes', style({ transform: 'rotate(0deg)', })),\r\n\r\n      transition('no => yes',\r\n        animate(200)\r\n      ),\r\n      transition('yes => no',\r\n        animate(200)\r\n      )\r\n    ])\r\n  ]\r\n})\r\nexport class ListItemComponent implements OnChanges, OnInit {\r\n  @Input() node: MultilevelNodes;\r\n  @Input() level = 1;\r\n  @Input() submenuLevel = 0;\r\n  @Input() selectedNode: MultilevelNodes;\r\n  @Input() nodeConfiguration: Configuration = null;\r\n  @Output() selectedItem = new EventEmitter<MultilevelNodes>();\r\n  isSelected = false;\r\n  nodeChildren: MultilevelNodes[];\r\n  classes: { [index: string]: boolean };\r\n  selectedListClasses: { [index: string]: boolean };\r\n  expanded = false;\r\n  firstInitializer = false;\r\n  constructor(\r\n    private router: Router,\r\n    public multilevelMenuService: MultilevelMenuService\r\n  ) {\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: false,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: false,\r\n    };\r\n  }\r\n  ngOnChanges() {\r\n    this.nodeChildren = this.node && this.node.items ? this.node.items.filter(n => !n.hidden) : [];\r\n    if (this.selectedNode !== undefined && this.selectedNode !== null) {\r\n      this.setSelectedClass(this.multilevelMenuService.recursiveCheckId(this.node, this.selectedNode.id));\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.selectedListClasses[CONSTANT.DISABLED_ITEM_CLASS_NAME] = this.node.disabled;\r\n\r\n    if (this.node.faIcon !== null &&\r\n      this.node.faIcon !== undefined &&\r\n      this.node.faIcon.match(/\\bfa\\w(?!-)/) === null) {\r\n      this.node.faIcon = `fas ${this.node.faIcon}`;\r\n    }\r\n\r\n    this.selectedListClasses[`level-${this.level}-submenulevel-${this.submenuLevel}`] = true;\r\n    if (typeof this.node.expanded === 'boolean') {\r\n      this.expanded = this.node.expanded;\r\n    }\r\n    this.setClasses();\r\n  }\r\n  setSelectedClass(isFound: boolean): void {\r\n    if (isFound) {\r\n      if (!this.firstInitializer) {\r\n        this.expanded = true;\r\n      }\r\n      this.isSelected = this.nodeConfiguration.highlightOnSelect || this.selectedNode.items === undefined ? true : false;\r\n    } else {\r\n      this.isSelected = false;\r\n      if (this.nodeConfiguration.collapseOnSelect) {\r\n        this.expanded = false;\r\n      }\r\n    }\r\n    this.selectedListClasses = {\r\n      [CONSTANT.DEFAULT_LIST_CLASS_NAME]: true,\r\n      [CONSTANT.SELECTED_LIST_CLASS_NAME]: this.isSelected,\r\n      [CONSTANT.ACTIVE_ITEM_CLASS_NAME]: this.selectedNode.id === this.node.id,\r\n      [CONSTANT.DISABLED_ITEM_CLASS_NAME]: this.node.disabled,\r\n      [`level-${this.level}-submenulevel-${this.submenuLevel}`]: true,\r\n    };\r\n    this.setClasses();\r\n  }\r\n  getPaddingAtStart(): boolean {\r\n    return this.nodeConfiguration.paddingAtStart ? true : false;\r\n  }\r\n  getListStyle(): ListStyle {\r\n    const styles = {\r\n      background: CONSTANT.DEFAULT_LIST_BACKGROUND_COLOR,\r\n      color: CONSTANT.DEFAULT_LIST_FONT_COLOR\r\n    };\r\n    if (this.nodeConfiguration.listBackgroundColor !== null) {\r\n      styles.background = this.nodeConfiguration.listBackgroundColor;\r\n    }\r\n    if (this.isSelected) {\r\n      this.nodeConfiguration.selectedListFontColor !== null ?\r\n        styles.color = this.nodeConfiguration.selectedListFontColor : styles.color = CONSTANT.DEFAULT_SELECTED_FONT_COLOR;\r\n    } else if (this.nodeConfiguration.fontColor !== null) {\r\n      styles.color = this.nodeConfiguration.fontColor;\r\n    }\r\n    return styles;\r\n  }\r\n  getListIcon(node: MultilevelNodes): string {\r\n    if (node.icon !== null && node.icon !== undefined && node.icon !== '') {\r\n      return `icon`;\r\n    } else if (node.faIcon !== null && node.faIcon !== undefined && node.faIcon !== '') {\r\n      return `faicon`;\r\n    } else if (node.imageIcon !== null && node.imageIcon !== undefined && node.imageIcon !== '') {\r\n      return `imageicon`;\r\n    } else if (node.svgIcon !== null && node.svgIcon !== undefined && node.svgIcon !== '') {\r\n      return `svgicon`;\r\n    } else {\r\n      return ``;\r\n    }\r\n  }\r\n  getSelectedSvgIcon() {\r\n    if (this.isSelected && this.node.activeSvgIcon) {\r\n      return this.node.activeSvgIcon;\r\n    }\r\n    return this.node.svgIcon;\r\n  }\r\n  getSelectedIcon() {\r\n    if (this.isSelected && this.node.activeIcon) {\r\n      return this.node.activeIcon;\r\n    }\r\n    return this.node.icon;\r\n  }\r\n  getSelectedFaIcon() {\r\n    if (this.isSelected && this.node.activeFaIcon) {\r\n      return this.node.activeFaIcon;\r\n    }\r\n    return this.node.faIcon;\r\n  }\r\n  getSelectedImageIcon() {\r\n    if (this.isSelected && this.node.activeImageIcon) {\r\n      return this.node.activeImageIcon;\r\n    }\r\n    return this.node.imageIcon;\r\n  }\r\n  hasItems(): boolean {\r\n    return this.nodeChildren.length > 0 ? true : false;\r\n  }\r\n  isRtlLayout(): boolean {\r\n    return this.nodeConfiguration.rtlLayout;\r\n  }\r\n  setClasses(): void {\r\n    this.classes = {\r\n      [`level-${this.level + 1}`]: true,\r\n      'amml-submenu': this.hasItems() && this.getPaddingAtStart()\r\n    };\r\n  }\r\n  expand(node: MultilevelNodes): void {\r\n    if (node.disabled) {\r\n      return;\r\n    }\r\n    this.expanded = !this.expanded;\r\n    this.firstInitializer = true;\r\n    this.setClasses();\r\n    if (this.nodeConfiguration.interfaceWithRoute !== null\r\n      && this.nodeConfiguration.interfaceWithRoute\r\n      && node.link !== undefined\r\n      && node.link\r\n    ) {\r\n      if (node.externalRedirect !== undefined && node.externalRedirect) {\r\n        window.location.href = node.link;\r\n      } else {\r\n        this.router.navigate([node.link], node.navigationExtras);\r\n      }\r\n    } else if (node.onSelected && typeof node.onSelected === 'function') {\r\n      node.onSelected(node);\r\n      this.selectedListItem(node);\r\n    } else if (node.items === undefined || this.nodeConfiguration.collapseOnSelect) {\r\n      this.selectedListItem(node);\r\n    }\r\n  }\r\n  selectedListItem(node: MultilevelNodes): void {\r\n    this.selectedItem.emit(node);\r\n  }\r\n  dividerEnabled(): boolean {\r\n    return (this.node.dividerLine == null) ?  this.nodeConfiguration.dividerLineOnEachNodeByDefault : this.node.dividerLine;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialsModule } from './materials.module';\r\n\r\nimport { NgMaterialMultilevelMenuComponent } from './ng-material-multilevel-menu.component';\r\nimport { ListItemComponent } from './list-item/list-item.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MaterialsModule\r\n  ],\r\n  declarations: [NgMaterialMultilevelMenuComponent, ListItemComponent],\r\n  exports: [NgMaterialMultilevelMenuComponent]\r\n})\r\nexport class NgMaterialMultilevelMenuModule { }\r\n"]}